<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Misc on Reliauk</title>
    <link>https://faqak.github.io/misc/</link>
    <description>Recent content in Misc on Reliauk</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <atom:link href="https://faqak.github.io/misc/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>大组合数模小质数幂</title>
      <link>https://faqak.github.io/misc/binom-mod-pe/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://faqak.github.io/misc/binom-mod-pe/</guid>
      <description>&lt;span class=&#39;anchor&#39; id=&#34;背景&#34;&gt;&lt;/span&gt;&#xA;&lt;h2&gt;&lt;a class=&#34;anchor-link&#34; href=&#34;https://faqak.github.io/misc/binom-mod-pe/#%e8%83%8c%e6%99%af&#34;&gt;#&lt;/a&gt;背景&lt;/h2&gt;&lt;p&gt;我们想求解的是这样一类问题：固定模数 $p^e$，多次查询 $\binom nm \bmod p^e$，默认一般情况下 $p &amp;gt; e$。&lt;/p&gt;&#xA;&lt;p&gt;当 $n$ 和 $m$ 比较小的时候，预处理阶乘数组可以很好地解决问题。因此我们主要关心的是当 $n$ 和 $m$ 很大（比如 $10^{18}$ 量级）时该问题是否有很好的解法。下面将介绍该问题的一种方向。&lt;/p&gt;&#xA;&lt;p&gt;我们很容易 $\mathcal O(\log n)$ 计算出 $n!$ 中含有的 $p$ 因子数量 $(n!)_p = \sum _{k\geq 1} \lfloor\frac{n}{p^k}\rfloor$。那么有&lt;/p&gt;&#xA;&lt;p&gt;$$&#xA;\dbinom nm = \dfrac{n!}{m!(n - m)!}=\dfrac{\dfrac{n!}{p^{(n!)_p}}}{\dfrac{m!}{p^{(m!)_p}}\dfrac{(n - m)!}{p^{((n - m)!)_p}}}p^{(n!)_p - (m!)_p - ((n - m)!)_p}&#xA;$$&lt;/p&gt;&#xA;&lt;p&gt;问题还是落在了计算 $\dfrac{n!}{p^{(n!)_ p}}$ 上。如果我们能够计算 $\displaystyle F(n) = \prod_{i=1, i\perp p}^n i$，那么仍然可以得到：&lt;/p&gt;&#xA;&lt;p&gt;$$&#xA;\dfrac{n!}{p^{(n!)&lt;em&gt;p}} = \prod&lt;/em&gt;{k\geq 0}F(\lfloor \dfrac{n}{p^k}\rfloor)&#xA;$$&lt;/p&gt;</description>
    </item>
    <item>
      <title>一类三分套三分在圆覆盖问题中的应用</title>
      <link>https://faqak.github.io/misc/circ-cover/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://faqak.github.io/misc/circ-cover/</guid>
      <description>&lt;span class=&#39;anchor&#39; id=&#34;思想&#34;&gt;&lt;/span&gt;&#xA;&lt;h2&gt;&lt;a class=&#34;anchor-link&#34; href=&#34;https://faqak.github.io/misc/circ-cover/#%e6%80%9d%e6%83%b3&#34;&gt;#&lt;/a&gt;思想&lt;/h2&gt;&lt;p&gt;通过对限制变形，给圆心 $(x, y)$ 赋合适的估价（与半径 $r$ 相关），并证明：固定 $x$ 时，估价是凸的；对所有 $x$，最优的 $y$ 的估价也是凸的。从而外层三分 $x$，内层三分 $y$ 即可 $\mathcal O(f(n)\log^2(\dfrac{1}{\epsilon}))$ 解决。&lt;/p&gt;&#xA;&lt;p&gt;具体的分析在各种问题中是不一样的，但方向类似，下面用几道题简单说明一下。&lt;/p&gt;&#xA;&lt;span class=&#39;anchor&#39; id=&#34;合法圆覆盖&#34;&gt;&lt;/span&gt;&#xA;&lt;h2&gt;&lt;a class=&#34;anchor-link&#34; href=&#34;https://faqak.github.io/misc/circ-cover/#%e5%90%88%e6%b3%95%e5%9c%86%e8%a6%86%e7%9b%96&#34;&gt;#&lt;/a&gt;合法圆覆盖&lt;/h2&gt;&lt;blockquote&gt;&#xA;&lt;p&gt;给定平面上的 $n$ 个黑点 $(a_i, b_i)$，$m$ 个白点 $(c_i, d_i)$，找到一个圆覆盖所有黑点并且不覆盖任何白点。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;设答案圆为 $(x, y, r)$，那么 $(a_i, b_i)$ 被覆盖等价于：&lt;/p&gt;&#xA;&lt;p&gt;$$&#xA;(x - a_i)^2 + (y - b_i)^2 \leq r^2&#xA;$$&lt;/p&gt;&#xA;&lt;p&gt;也就是，&lt;/p&gt;&#xA;&lt;p&gt;$$&#xA;2a_ix + 2b_iy + (r^2 -x^2 - y^2) - a_i^2 - b_i^2 \geq 0&#xA;$$&lt;/p&gt;&#xA;&lt;p&gt;相当于强制点 $(x, y, r^2 - x^2 - y^2)$ 在某半空间内。$(c_i, d_i)$ 不被覆盖，式子也是类似的，同样是限制该点在某半空间内。&lt;/p&gt;</description>
    </item>
    <item>
      <title>避免 Pattern 的 RDL 计数</title>
      <link>https://faqak.github.io/misc/avoid-pattern-rdl/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://faqak.github.io/misc/avoid-pattern-rdl/</guid>
      <description>&lt;p&gt;搬运自 &lt;a href=&#34;https://www.valpo.edu/mathematics-statistics/files/2014/09/Pudwell2015.pdf&#34;&gt;Pattern Avoidance in Reverse Double Lists&lt;/a&gt;。&lt;/p&gt;&#xA;&lt;span class=&#39;anchor&#39; id=&#34;定义&#34;&gt;&lt;/span&gt;&#xA;&lt;h2&gt;&lt;a class=&#34;anchor-link&#34; href=&#34;https://faqak.github.io/misc/avoid-pattern-rdl/#%e5%ae%9a%e4%b9%89&#34;&gt;#&lt;/a&gt;定义&lt;/h2&gt;&lt;p&gt;RDL（Reverse Double List） 是把一个排列的反串拼接在它的后面得到的结构。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;具体来说，记长为 $2n$ 的 RDL 构成的集合为 $\mathcal{R}_n$，那么有 $\mathcal R_n = \{ \pi\pi^{\textsf{R}}\mid\pi \in \mathcal S_n \}$，其中 $\mathcal S_n$ 是所有 $n$ 阶排列构成的集合。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;避免 Pattern 的 RDL 计数是这样一个问题：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;给定我们称之为 Pattern 的一个排列 $\rho$。&lt;/li&gt;&#xA;&lt;li&gt;考虑满足如下条件的 $n$ 阶 RDL：&#xA;&lt;ul&gt;&#xA;&lt;li&gt;不存在大小为 $\lvert \rho \rvert$ 的子序列，满足其中元素的相对大小顺序和 $\rho$ 相等。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;满足该条件的 $n$ 阶 RDL 集合被记作 $\mathcal R_n(\rho)$，我们要求的即 $\lvert \mathcal R_n(\rho)\rvert$。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;事实上，对于 $\lvert \rho \rvert \leq 4$ 的情形，我们有足够快速简单的方法计算 $\lvert \mathcal R_n(\rho)\rvert$。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
